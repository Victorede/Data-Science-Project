on:
  push:
    branches:
      - pre-prod
      - main

name: Release Workflow

jobs:
  handleRelease:
    name: Handle Release Based on Branch
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Handle Pre-Prod Release
        if: github.ref == 'refs/heads/pre-prod'
        run: |
          # Fetch the latest tag
          LATEST_TAG=$(git describe --tags `git rev-list --tags --max-count=1`)

          # If no tag exists, set initial tag. Else, increment the tag.
          if [ -z "$LATEST_TAG" ]; then
            NEW_TAG="v1.0.0"
          else
            # Assuming tag is in the format vX.Y.Z
            MAJOR_VERSION=$(echo $LATEST_TAG | cut -d. -f1)
            MINOR_VERSION=$(echo $LATEST_TAG | cut -d. -f2)
            PATCH_VERSION=$(echo $LATEST_TAG | cut -d. -f3)
            PATCH_VERSION=$((PATCH_VERSION + 1))
            NEW_TAG="${MAJOR_VERSION}.${MINOR_VERSION}.${PATCH_VERSION}"
          fi

          # Create and push the new tag
          git tag $NEW_TAG
          git push origin $NEW_TAG

      - name: Handle Main Release
        if: github.ref == 'refs/heads/main'
        run: |
          # Fetch the latest tag
          LATEST_TAG=$(git describe --tags `git rev-list --tags --max-count=1`)

          # Check if latest commit in main matches the latest tag
          LATEST_COMMIT=$(git rev-parse HEAD)
          TAG_COMMIT=$(git rev-list -n 1 $LATEST_TAG)

          if [ "$LATEST_COMMIT" != "$TAG_COMMIT" ]; then
            echo "Error: The latest commit in main does not match the latest tag."
            exit 1
          fi

          echo "Main is aligned with the latest release tag."
